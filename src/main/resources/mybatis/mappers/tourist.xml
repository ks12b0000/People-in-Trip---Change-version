<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="mapper.tourist">
  	
  	<!-- 제주 관광지 api db에 저장용 -->
  	<insert id="touristadd">
			insert into P_tourist (alltag, label, label2, title, address, tag, introduction, imgpath, contentsid, phoneno, latitude, longitude)
			values <foreach collection="list" separator="," item="pvo"> (#{pvo.alltag}, #{pvo.label}, #{pvo.label2}, #{pvo.title}, #{pvo.address}, #{pvo.tag}, #{pvo.introduction}, #{pvo.imgpath}, #{pvo.contentsid}, #{pvo.phoneno}, #{pvo.latitude}, #{pvo.longitude})
		</foreach>
	</insert>
	
	<!-- 부산 여행지 api db에 저장용 -->
  	<insert id="busantouristadd">		
			insert into P_busantourist (LAT, LNG, UC_SEQ, PLACE, ADDR1, CNTCT_TEL, ITEMCNTNTS, MAIN_IMG_NORMAL, SUBTITLE)
			values <foreach collection="list" separator="," item="pvo1"> (#{pvo1.LAT }, #{pvo1.LNG }, #{pvo1.UC_SEQ }, #{pvo1.PLACE }, #{pvo1.ADDR1 }, #{pvo1.CNTCT_TEL }, #{pvo1.ITEMCNTNTS }, #{pvo1.MAIN_IMG_NORMAL }, #{pvo1.SUBTITLE })
		</foreach>
	</insert>
	
	<!-- 부산 축제 api db에 저장용 -->
  	<insert id="busantouristadd2">
			insert into P_busanfestival (LAT, LNG, UC_SEQ, PLACE, ADDR1, CNTCT_TEL, ITEMCNTNTS, MAIN_IMG_NORMAL, SUBTITLE)
			values <foreach collection="list" separator="," item="pvo1"> (#{pvo1.LAT }, #{pvo1.LNG }, #{pvo1.UC_SEQ }, #{pvo1.PLACE }, #{pvo1.ADDR1 }, #{pvo1.CNTCT_TEL }, #{pvo1.ITEMCNTNTS }, #{pvo1.MAIN_IMG_NORMAL }, #{pvo1.SUBTITLE })
		</foreach>
	</insert>
	
	<!-- 부산 체험 api db에 저장용 -->
  	<insert id="busantouristadd3">
			insert into P_busanexperience (LAT, LNG, UC_SEQ, PLACE, ADDR1, CNTCT_TEL, ITEMCNTNTS, MAIN_IMG_NORMAL, SUBTITLE)
			values  <foreach collection="list" separator="," item="pvo1"> (#{pvo1.LAT }, #{pvo1.LNG }, #{pvo1.UC_SEQ }, #{pvo1.PLACE }, #{pvo1.ADDR1 }, #{pvo1.CNTCT_TEL }, #{pvo1.ITEMCNTNTS }, #{pvo1.MAIN_IMG_NORMAL }, #{pvo1.SUBTITLE })
		</foreach>
	</insert>

	<!-- 제주도 여행지 총 개수 -->
	<select id="getTotalRowCount" parameterType="kr.co.intrip.tourist.dto.PagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_TOURIST
			WHERE label LIKE '관광지' AND ALLTAG  NOT LIKE '%전시%'
		]]>
	</select>
	
	<!-- 제주도 여행지 페이지 리스트  -->
	<select id="jejutourist" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by label desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '관광지' AND ALLTAG  NOT LIKE '%전시%'
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}		
		]]>
	</select>
	
	<!-- 부산 여행지 총 개수 -->
	<select id="busangetTotalRowCount" parameterType="kr.co.intrip.tourist.dto.PagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_busantourist
		]]>
	</select>
	
	<!-- 부산 여행지 페이지 리스트  -->
	<select id="busantourist" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by UC_SEQ desc) as rNum
        	from P_busantourist pt 
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}		
		]]>
	</select>
	
	<!-- 제주도 축제 총 개수 -->
	<select id="getTotalRowCount2" parameterType="kr.co.intrip.tourist.dto.PagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_TOURIST
			WHERE label LIKE '%축제%'
		]]>
	</select>
	
	<!-- 제주도 축제 페이지 리스트  -->
	<select id="jejufestival" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by label desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '%축제%'
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}		
		]]>
	</select>
	
	<!-- 부산 축제 총 개수 -->
	<select id="busangetTotalRowCount2" parameterType="kr.co.intrip.tourist.dto.PagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_busanfestival
		]]>
	</select>
	
	<!-- 부산 축제 페이지 리스트  -->
	<select id="busanfestival" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by UC_SEQ desc) as rNum
        	from P_busanfestival pt 
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}		
		]]>
	</select>
	
	<!-- 제주도 전시관 총 개수 -->
	<select id="getTotalRowCount3" parameterType="kr.co.intrip.tourist.dto.PagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_TOURIST
			WHERE alltag LIKE '%전시%' AND label LIKE '관광지'
		]]>
	</select>
	
	<!-- 제주도 전시관 페이지 리스트  -->
	<select id="jejuexhibition" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by label desc) as rNum
        	from P_TOURIST pt 
        	WHERE alltag LIKE '%전시%' AND label LIKE '관광지'
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}		
		]]>
	</select>
	
	<!-- 부산 체험 총 개수 -->
	<select id="busangetTotalRowCount3" parameterType="kr.co.intrip.tourist.dto.PagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_busanexperience
		]]>
	</select>
	
	<!-- 부산 체험 페이지 리스트  -->
	<select id="busanexperience" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by UC_SEQ desc) as rNum
        	from P_busanexperience pt 
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}		
		]]>
	</select>	
	
	<!-- 제주도 통합 상세페이지  -->
	<select id="jejudetail" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="String">
		<![CDATA[
			SELECT * FROM P_TOURIST 
			WHERE contentsid = #{contentsid,jdbcType=VARCHAR}
		]]>
	</select>
	
	<!-- 제주도 통합 상세페이지 조회수 증가  -->
	<update id="viewcount">
		<![CDATA[
			UPDATE P_TOURIST
			SET viewcount = viewcount + 1 
			WHERE contentsid = #{contentsid}
		]]>
	</update>
	
	<!-- 제주도 여행지 조회순 페이지 리스트  -->
	<select id="jejutourist_lookupSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by viewcount desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '관광지' AND ALLTAG  NOT LIKE '%전시%'
        	ORDER by viewcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by viewcount desc		  		 	
		]]>
	</select>
	
	<!-- 제주도 여행지 댓글순 페이지 리스트  -->
	<select id="jejutourist_commentSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by commentcount desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '관광지' AND ALLTAG  NOT LIKE '%전시%'
        	ORDER by commentcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by commentcount desc		  		 	
		]]>
	</select>
	
	<!-- 제주도 여행지 추천순 페이지 리스트  -->
	<select id="jejutourist_SuggestionSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by suggestionhit desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '관광지' AND ALLTAG  NOT LIKE '%전시%'
        	ORDER by suggestionhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by suggestionhit desc		  		 	
		]]>
	</select>	
	
	<!-- 제주도 여행지 찜순 페이지 리스트  -->
	<select id="jejutourist_steamedSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by steamedhit desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '관광지' AND ALLTAG  NOT LIKE '%전시%'
        	ORDER by steamedhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by steamedhit desc		  		 	
		]]>
	</select>
	
	<!-- 부산 여행지 상세페이지  -->
	<select id="busandetail" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="int">
		<![CDATA[
			SELECT * FROM P_busantourist 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</select>
	
	<!-- 부산 여행지 상세페이지 조회수 증가  -->
	<update id="busanviewcount">
		<![CDATA[
			UPDATE P_busantourist
			SET viewcount = viewcount + 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	
	<!-- 부산 축제 상세페이지  -->
	<select id="busandetail2" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="int">
		<![CDATA[
			SELECT * FROM P_busanfestival 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</select>
	
	<!-- 부산 축제 상세페이지 조회수 증가  -->
	<update id="busanviewcount2">
		<![CDATA[
			UPDATE P_busanfestival
			SET viewcount = viewcount + 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	
	<!-- 부산 체험 상세페이지  -->
	<select id="busandetail3" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="int">
		<![CDATA[
			SELECT * FROM P_busanexperience
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</select>
	
	<!-- 부산 체험 상세페이지 조회수 증가  -->
	<update id="busanviewcount3">
		<![CDATA[
			UPDATE P_busanexperience
			SET viewcount = viewcount + 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	
	<!-- 부산 여행지 조회순 페이지 리스트  -->
	<select id="busantourist_lookupSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by viewcount desc) as rNum
        	from P_busantourist pt 
        	ORDER by viewcount desc
        	
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by viewcount desc		  		 	
		]]>
	</select>
	
	<!-- 부산 여행지 댓글순 페이지 리스트  -->
	<select id="busantourist_commentSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by commentcount desc) as rNum
        	from P_busantourist pt 
        	ORDER by commentcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by commentcount desc		  		 	
		]]>
	</select>
	
	<!-- 부산 여행지 추천순 페이지 리스트  -->
	<select id="busantourist_SuggestionSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by suggestionhit desc) as rNum
        	from P_busantourist pt 
        	ORDER by suggestionhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by suggestionhit desc		  		 	
		]]>
	</select>	
	
	<!-- 부산 여행지 찜순 페이지 리스트  -->
	<select id="busantourist_steamedSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by steamedhit desc) as rNum
        	from P_busantourist pt 
        	ORDER by steamedhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by steamedhit desc		  		 	
		]]>
	</select>
	
	<!-- 제주도 축제 조회순 페이지 리스트  -->
	<select id="jejufestival_lookupSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by viewcount desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '%축제%'
        	ORDER by viewcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by viewcount desc
		]]>
	</select>
	
	<!-- 제주도 축제 추천순 페이지 리스트  -->
	<select id="jejufestival_SuggestionSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by suggestionhit desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '%축제%'
        	ORDER by suggestionhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by suggestionhit desc
		]]>
	</select>
	
	<!-- 제주도 축제 댓글순 페이지 리스트  -->
	<select id="jejufestival_commentSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by commentcount desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '%축제%'
        	ORDER by commentcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by commentcount desc
		]]>
	</select>
	
	<!-- 제주도 축제 찜순 페이지 리스트  -->
	<select id="jejufestival_steamedSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by steamedhit desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '%축제%'
        	ORDER by steamedhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by steamedhit desc
		]]>
	</select>	
	
	<!-- 부산 축제 조회순 페이지 리스트  -->
	<select id="busanfestival_lookupSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by viewcount desc) as rNum
        	from P_busanfestival pt 
        	ORDER by viewcount desc        	
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by viewcount desc		  		 	
		]]>
	</select>
	
	<!-- 부산 축제 댓글순 페이지 리스트  -->
	<select id="busanfestival_commentSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by commentcount desc) as rNum
        	from P_busanfestival pt 
        	ORDER by commentcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by commentcount desc		  		 	
		]]>
	</select>
	
	<!-- 부산 축제 추천순 페이지 리스트  -->
	<select id="busanfestival_SuggestionSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by suggestionhit desc) as rNum
        	from P_busanfestival pt 
        	ORDER by suggestionhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by suggestionhit desc		  		 	
		]]>
	</select>	
	
	<!-- 부산 축제 찜순 페이지 리스트  -->
	<select id="busanfestival_steamedSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by steamedhit desc) as rNum
        	from P_busanfestival pt 
        	ORDER by steamedhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by steamedhit desc		  		 	
		]]>
	</select>
	
	<!-- 제주도 전시관 조회순 페이지 리스트  -->
	<select id="jejuexhibition_lookupSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by viewcount desc) as rNum
        	from P_TOURIST pt 
        	WHERE alltag LIKE '%전시%' AND label LIKE '관광지'
        	ORDER by viewcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by viewcount desc
		]]>
	</select>
	
	<!-- 제주도 전시관 추천순 페이지 리스트  -->
	<select id="jejuexhibition_SuggestionSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by suggestionhit desc) as rNum
        	from P_TOURIST pt 
        	WHERE alltag LIKE '%전시%' AND label LIKE '관광지'
        	ORDER by suggestionhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by suggestionhit desc
		]]>
	</select>
	
	<!-- 제주도 전시관 댓글순 페이지 리스트  -->
	<select id="jejuexhibition_commentSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by commentcount desc) as rNum
        	from P_TOURIST pt 
        	WHERE alltag LIKE '%전시%' AND label LIKE '관광지'
        	ORDER by commentcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by commentcount desc
		]]>
	</select>
	
	<!-- 제주도 전시관 찜순 페이지 리스트  -->
	<select id="jejuexhibition_steamedSort" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by steamedhit desc) as rNum
        	from P_TOURIST pt 
        	WHERE alltag LIKE '%전시%' AND label LIKE '관광지'
        	ORDER by steamedhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}	
   		 	ORDER by steamedhit desc
		]]>
	</select>
	
	<!-- 부산 체험 조회순 페이지 리스트  -->
	<select id="busanexperience_lookupSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by viewcount desc) as rNum
        	from P_busanexperience pt 
        	ORDER by viewcount desc        	
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by viewcount desc		  		 	
		]]>
	</select>
	
	<!-- 부산 체험 댓글순 페이지 리스트  -->
	<select id="busanexperience_commentSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by commentcount desc) as rNum
        	from P_busanexperience pt 
        	ORDER by commentcount desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by commentcount desc		  		 	
		]]>
	</select>
	
	<!-- 부산 체험 추천순 페이지 리스트  -->
	<select id="busanexperience_SuggestionSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by suggestionhit desc) as rNum
        	from P_busanexperience pt 
        	ORDER by suggestionhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by suggestionhit desc		  		 	
		]]>
	</select>	
	
	<!-- 부산 체험 찜순 페이지 리스트  -->
	<select id="busanexperience_steamedSort" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.tourist.dto.PagingDTO">
		<![CDATA[
			select *
   			 from (
        	select pt.*, row_number() over(order by steamedhit desc) as rNum
        	from P_busanexperience pt 
        	ORDER by steamedhit desc
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		 	ORDER by steamedhit desc		  		 	
		]]>
	</select>

	<!-- 제주도 댓글 총 개수 -->
	<select id="CommentgetTotalRowCount" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_JEJU_COMMENT
			WHERE contentsid = #{contentsid}
		]]>
	</select>

	<!-- 제주도 댓글 조회 -->
   	<select id="jejuCommentselect" resultType="kr.co.intrip.tourist.dto.JejuCommentDTO" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO">
   		<![CDATA[
	   		select *
   			 from (
        	select pt.*, row_number() over(order by com_date desc) as rNum
        	from P_JEJU_COMMENT pt 
        	where contentsid = #{contentsid}
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		]]>
   	</select>
   	
   	<!-- 제주도 댓글 작성 -->
	<insert id="jejuWriteReply">
			<![CDATA[
			   	insert into P_JEJU_COMMENT(COM_NUM, ID, contentsid, COM_CONTENT)
			  	values( #{com_num}, #{id}, #{contentsid}, #{com_content})
		  	]]>
	</insert>
	
	<!-- 제주도 댓글 수 증가  -->
	<update id="commentcount">
		<![CDATA[
			UPDATE P_TOURIST
			SET commentcount = commentcount + 1 
			WHERE contentsid = #{contentsid}
		]]>
	</update>
	
	<!-- 제주도 댓글 수 감소 -->
	<update id="commentcountminus">
		<![CDATA[
			UPDATE P_TOURIST
			SET commentcount = commentcount - 1 
			WHERE contentsid = #{contentsid}
		]]>
	</update>
	
	<!-- 제주도 댓글 수정 -->
	<update id="jejuupdateReply" parameterType="kr.co.intrip.tourist.dto.JejuCommentDTO">
		<![CDATA[
		   	update P_JEJU_COMMENT 
		   	set COM_CONTENT = #{com_content}
		   	where com_num = #{com_num}
	   	]]>
	</update>
	   	
	<!-- 제주도 댓글 삭제 -->
	<delete id="jejudeleteReply" parameterType="kr.co.intrip.tourist.dto.JejuCommentDTO">
		<![CDATA[
		   	delete
		   	from P_JEJU_COMMENT 
		   	where com_num = #{com_num}
		]]>
	</delete>
	
	<!-- 제주도 선택된 댓글 조회 -->
	<select id="jejuselectReply" resultType="kr.co.intrip.tourist.dto.JejuCommentDTO">
		<![CDATA[
			select *
			from P_JEJU_COMMENT
			where com_num = #{com_num}
		]]>
	</select>
	
	<!-- 제주도 여행지 찜 수 -->
	<update id="updateSteamed" parameterType="String">
		<![CDATA[
			update P_TOURIST 
			set steamedhit = steamedhit + 1
			where contentsid = #{contentsid}
		]]>
	</update>

	<!-- 제주도 여행지 찜 수 취소 -->
	<update id="updateSteamedCancel" parameterType="String">
		<![CDATA[
			update P_TOURIST 
			set steamedhit = steamedhit - 1
			where contentsid = #{contentsid}
		]]>
	</update>

	<!-- 제주도 여행지 찜 시 steamed 테이블에 insert -->
	<insert id="insertSteamed" parameterType="java.util.Map">
		<![CDATA[
			insert into tourist_steamed(steamedno , contentsid , id) 
			values((SELECT ifnull(MAX(steamedno), 0) + 1 FROM tourist_steamed b) ,#{contentsid} ,#{id})
		]]>
	</insert>

	<!-- 제주도 여행지 찜 취소 시 delete -->
	<delete id="deleteSteamed">
		<![CDATA[
			delete 
			from tourist_steamed 
			where contentsid = #{contentsid} and id = #{id}
		]]>
	</delete>

	<!-- 제주도 여행지 찜 시 Check를 1로 만들어서 중복방지-->
	<update id="updateSteamedCheck">
		<![CDATA[
			update tourist_steamed 
			set STEAMEDCHECK = 1
			where contentsid = #{contentsid} and id = #{id}
		]]>
	</update>

	<!-- 제주도 여행지 찜 취소 시 다시 0  -->
	<update id="updateSteamedCheckCancel">
		<![CDATA[
			update tourist_steamed 
			set STEAMEDCHECK = 0
			where contentsid = #{contentsid} and id = #{id}
		]]>
	</update>

	<!-- 제주도 여행지 찜 중복방지 select문 -->
	<select id="SteamedCheck" resultType="String" >
		<![CDATA[
			select count(*) 
			from tourist_steamed 
			where contentsid = #{contentsid} and id = #{id} 
		]]>
	</select>

	<!-- 제주도 여행지 추천 수 -->
	<update id="updateSuggestion" parameterType="String">
		<![CDATA[
			update P_TOURIST 
			set suggestionhit = suggestionhit + 1
			where contentsid = #{contentsid}
		]]>
	</update>

	<!-- 제주도 여행지 추천 수 취소 -->
	<update id="updateSuggestionCancel" parameterType="String">
		<![CDATA[
			update P_TOURIST 
			set suggestionhit = suggestionhit - 1
			where contentsid = #{contentsid}
		]]>
	</update>

	<!-- 제주도 여행지 추천 시 steamed 테이블에 insert -->
	<insert id="insertSuggestion" parameterType="java.util.Map">
		<![CDATA[
			insert into tourist_suggestion(suggestionno , contentsid , id) 
			values((SELECT ifnull(MAX(suggestionno), 0) + 1 FROM tourist_suggestion b) ,#{contentsid} ,#{id})
		]]>
	</insert>

	<!-- 제주도 여행지 추천 취소 시 delete -->
	<delete id="deleteSuggestion">
		<![CDATA[
			delete 
			from tourist_suggestion 
			where contentsid = #{contentsid} and id = #{id}
		]]>
	</delete>

	<!-- 제주도 여행지 추천 시 Check를 1로 만들어서 중복방지-->
	<update id="updateSuggestionCheck">
		<![CDATA[
			update tourist_suggestion 
			set suggestioncheck = 1
			where contentsid = #{contentsid} and id = #{id}
		]]>
	</update>

	<!-- 제주도 여행지 추천 취소 시 다시 0  -->
	<update id="updateSuggestionCheckCancel">
		<![CDATA[
			update tourist_suggestion 
			set suggestioncheck = 0
			where contentsid = #{contentsid} and id = #{id}
		]]>
	</update>

	<!-- 제주도 여행지 추천 중복방지 select문 -->
	<select id="SuggestionCheck" resultType="String" >
		<![CDATA[
			select count(*) 
			from tourist_suggestion 
			where contentsid = #{contentsid} and id = #{id} 
		]]>
	</select>

	<!-- 제주도 여행지 메인페이지 배너-->
	<select id="jejutouristmain" resultType="kr.co.intrip.tourist.dto.ApiDTO">
		<![CDATA[
			select *
   			from (
        	select pt.*, row_number() over(order by SUGGESTIONHIT desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '관광지' AND ALLTAG  NOT LIKE '%전시%'
        	) mb
   		 	where rNum between 1 and 4
		]]>
	</select>
	
	<!-- 제주도 축제 4개 가져오기-->
	<select id="jejufestivalmain" resultType="kr.co.intrip.tourist.dto.ApiDTO">
		<![CDATA[
			select *
   			from (
        	select pt.*, row_number() over(order by SUGGESTIONHIT desc) as rNum
        	from P_TOURIST pt 
        	WHERE label LIKE '%축제%'
        	) mb
   		 	where rNum between 1 and 4
		]]>
	</select>
	
	<!-- 제주도 전시 4개 가져오기-->
	<select id="jejuexhibitionmain" resultType="kr.co.intrip.tourist.dto.ApiDTO">
		<![CDATA[
			select *
   			from (
        	select pt.*, row_number() over(order by SUGGESTIONHIT desc) as rNum
        	from P_TOURIST pt 
        	WHERE alltag LIKE '%전시%' AND label LIKE '관광지'
        	) mb
   		 	where rNum between 1 and 4
		]]>
	</select>
	
	<!-- 부산 댓글 총 개수 -->
	<select id="busanCommentgetTotalRowCount" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_BUSAN_COMMENT
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</select>

	<!-- 부산 댓글 조회 -->
   	<select id="busanCommentselect" resultType="kr.co.intrip.tourist.dto.BusanCommentDTO" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO">
   		<![CDATA[
	   		select *
   			 from (
        	select pt.*, row_number() over(order by com_date desc) as rNum
        	from P_BUSAN_COMMENT pt 
        	where UC_SEQ = #{UC_SEQ}
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		]]>
   	</select>
   	
   	<!-- 부산 댓글 작성 -->
	<insert id="busanWriteReply">
			<![CDATA[
			   	insert into P_BUSAN_COMMENT(COM_NUM, ID, UC_SEQ, COM_CONTENT)
			  	values( #{com_num}, #{id}, #{UC_SEQ}, #{com_content})
		  	]]>
	</insert>
	
	<!-- 부산 댓글 수 증가  -->
	<update id="busancommentcount">
		<![CDATA[
			UPDATE P_busantourist
			SET commentcount = commentcount + 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	
	<!-- 부산 댓글 수 감소 -->
	<update id="busancommentcountminus">
		<![CDATA[
			UPDATE P_busantourist
			SET commentcount = commentcount - 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	
	<!-- 부산 댓글 수정 -->
	<update id="busanupdateReply" parameterType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
		   	update P_BUSAN_COMMENT 
		   	set COM_CONTENT = #{com_content}
		   	where com_num = #{com_num}
	   	]]>
	</update>
	   	
	<!-- 부산 댓글 삭제 -->
	<delete id="busandeleteReply" parameterType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
		   	delete
		   	from P_BUSAN_COMMENT 
		   	where com_num = #{com_num}
		]]>
	</delete>
	
	<!-- 부산 선택된 댓글 조회 -->
	<select id="busanselectReply" resultType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
			select *
			from P_BUSAN_COMMENT
			where com_num = #{com_num}
		]]>
	</select>
	
	<!-- 부산 여행지 찜 수 -->
	<update id="busanupdateSteamed" parameterType="int">
		<![CDATA[
			update P_busantourist 
			set steamedhit = steamedhit + 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 여행지 찜 수 취소 -->
	<update id="busanupdateSteamedCancel" parameterType="int">
		<![CDATA[
			update P_busantourist 
			set steamedhit = steamedhit - 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 여행지 찜 시 steamed 테이블에 insert -->
	<insert id="busaninsertSteamed" parameterType="java.util.Map">
		<![CDATA[
			insert into busantourist_steamed(steamedno , UC_SEQ , id) 
			values((SELECT ifnull(MAX(steamedno), 0) + 1 FROM busantourist_steamed b) ,#{UC_SEQ} ,#{id})
		]]>
	</insert>

	<!-- 부산 여행지 찜 취소 시 delete -->
	<delete id="busandeleteSteamed">
		<![CDATA[
			delete 
			from busantourist_steamed 
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</delete>

	<!-- 부산 여행지 찜 시 Check를 1로 만들어서 중복방지-->
	<update id="busanupdateSteamedCheck">
		<![CDATA[
			update busantourist_steamed 
			set STEAMEDCHECK = 1
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 여행지 찜 취소 시 다시 0  -->
	<update id="busanupdateSteamedCheckCancel">
		<![CDATA[
			update busantourist_steamed 
			set STEAMEDCHECK = 0
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 여행지 찜 중복방지 select문 -->
	<select id="busanSteamedCheck" resultType="int" >
		<![CDATA[
			select count(*) 
			from busantourist_steamed 
			where UC_SEQ = #{UC_SEQ} and id = #{id} 
		]]>
	</select>

	<!-- 부산 여행지 추천 수 -->
	<update id="busanupdateSuggestion" parameterType="int">
		<![CDATA[
			update P_busantourist 
			set suggestionhit = suggestionhit + 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 여행지 추천 수 취소 -->
	<update id="busanupdateSuggestionCancel" parameterType="int">
		<![CDATA[
			update P_busantourist 
			set suggestionhit = suggestionhit - 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 여행지 추천 시 steamed 테이블에 insert -->
	<insert id="busaninsertSuggestion" parameterType="java.util.Map">
		<![CDATA[
			insert into busantourist_suggestion(suggestionno , UC_SEQ , id) 
			values((SELECT ifnull(MAX(suggestionno), 0) + 1 FROM busantourist_suggestion b) ,#{UC_SEQ} ,#{id})
		]]>
	</insert>

	<!-- 부산 여행지 추천 취소 시 delete -->
	<delete id="busandeleteSuggestion">
		<![CDATA[
			delete 
			from busantourist_suggestion 
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</delete>

	<!-- 부산 여행지 추천 시 Check를 1로 만들어서 중복방지-->
	<update id="busanupdateSuggestionCheck">
		<![CDATA[
			update busantourist_suggestion 
			set suggestioncheck = 1
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 여행지 추천 취소 시 다시 0  -->
	<update id="busanupdateSuggestionCheckCancel">
		<![CDATA[
			update busantourist_suggestion 
			set suggestioncheck = 0
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 여행지 추천 중복방지 select문 -->
	<select id="busanSuggestionCheck" resultType="int" >
		<![CDATA[
			select count(*) 
			from busantourist_suggestion 
			where UC_SEQ = #{UC_SEQ} and id = #{id} 
		]]>
	</select>
	
	<!-- 부산 축제 댓글 총 개수 -->
	<select id="busanCommentgetTotalRowCount2" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_BUSANfestival_COMMENT
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</select>

	<!-- 부산 축제 댓글 조회 -->
   	<select id="busanCommentselect2" resultType="kr.co.intrip.tourist.dto.BusanCommentDTO" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO">
   		<![CDATA[
	   		select *
   			 from (
        	select pt.*, row_number() over(order by com_date desc) as rNum
        	from P_BUSANfestival_COMMENT pt 
        	where UC_SEQ = #{UC_SEQ}
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		]]>
   	</select>
   	
   	<!-- 부산 축제 댓글 작성 -->
	<insert id="busanWriteReply2">
			<![CDATA[
			   	insert into P_BUSANfestival_COMMENT(COM_NUM, ID, UC_SEQ, COM_CONTENT)
			  	values( #{com_num}, #{id}, #{UC_SEQ}, #{com_content})
		  	]]>
	</insert>
	
	<!-- 부산 축제 댓글 수 증가  -->
	<update id="busancommentcount2">
		<![CDATA[
			UPDATE P_busanfestival
			SET commentcount = commentcount + 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	 
	<!-- 부산 축제 댓글 수 감소 -->
	<update id="busancommentcountminus2">
		<![CDATA[
			UPDATE P_busanfestival
			SET commentcount = commentcount - 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	
	<!-- 부산 축제 댓글 수정 -->
	<update id="busanupdateReply2" parameterType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
		   	update P_BUSANfestival_COMMENT 
		   	set COM_CONTENT = #{com_content}
		   	where com_num = #{com_num}
	   	]]>
	</update>
	   	
	<!-- 부산 축제 댓글 삭제 -->
	<delete id="busandeleteReply2" parameterType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
		   	delete
		   	from P_BUSANfestival_COMMENT 
		   	where com_num = #{com_num}
		]]>
	</delete>
	
	<!-- 부산 축제 선택된 댓글 조회 -->
	<select id="busanselectReply2" resultType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
			select *
			from P_BUSANfestival_COMMENT
			where com_num = #{com_num}
		]]>
	</select>
	
	<!-- 부산 축제 찜 수 -->
	<update id="busanupdateSteamed2" parameterType="int">
		<![CDATA[
			update P_busanfestival 
			set steamedhit = steamedhit + 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 축제 찜 수 취소 -->
	<update id="busanupdateSteamedCancel2" parameterType="int">
		<![CDATA[
			update P_busanfestival 
			set steamedhit = steamedhit - 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 축제 찜 시 steamed 테이블에 insert -->
	<insert id="busaninsertSteamed2" parameterType="java.util.Map">
		<![CDATA[
			insert into busanfestival_steamed(steamedno , UC_SEQ , id) 
			values((SELECT ifnull(MAX(steamedno), 0) + 1 FROM busanfestival_steamed b) ,#{UC_SEQ} ,#{id})
		]]>
	</insert>

	<!-- 부산 축제 찜 취소 시 delete -->
	<delete id="busandeleteSteamed2">
		<![CDATA[
			delete 
			from busanfestival_steamed 
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</delete>

	<!-- 부산 축제 찜 시 Check를 1로 만들어서 중복방지-->
	<update id="busanupdateSteamedCheck2">
		<![CDATA[
			update busanfestival_steamed 
			set STEAMEDCHECK = 1
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 축제 찜 취소 시 다시 0  -->
	<update id="busanupdateSteamedCheckCancel2">
		<![CDATA[
			update busanfestival_steamed 
			set STEAMEDCHECK = 0
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 축제 찜 중복방지 select문 -->
	<select id="busanSteamedCheck2" resultType="int" >
		<![CDATA[
			select count(*) 
			from busanfestival_steamed 
			where UC_SEQ = #{UC_SEQ} and id = #{id} 
		]]>
	</select>

	<!-- 부산 축제 추천 수 -->
	<update id="busanupdateSuggestion2" parameterType="int">
		<![CDATA[
			update P_busanfestival 
			set suggestionhit = suggestionhit + 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 축제 추천 수 취소 -->
	<update id="busanupdateSuggestionCancel2" parameterType="int">
		<![CDATA[
			update P_busanfestival 
			set suggestionhit = suggestionhit - 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 축제 추천 시 steamed 테이블에 insert -->
	<insert id="busaninsertSuggestion2" parameterType="java.util.Map">
		<![CDATA[
			insert into busanfestival_suggestion(suggestionno , UC_SEQ , id) 
			values((SELECT ifnull(MAX(suggestionno), 0) + 1 FROM busanfestival_suggestion b) ,#{UC_SEQ} ,#{id})
		]]>
	</insert>

	<!-- 부산 축제 추천 취소 시 delete -->
	<delete id="busandeleteSuggestion2">
		<![CDATA[
			delete 
			from busanfestival_suggestion 
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</delete>

	<!-- 부산 축제 추천 시 Check를 1로 만들어서 중복방지-->
	<update id="busanupdateSuggestionCheck2">
		<![CDATA[
			update busanfestival_suggestion 
			set suggestioncheck = 1
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 축제 추천 취소 시 다시 0  -->
	<update id="busanupdateSuggestionCheckCancel2">
		<![CDATA[
			update busanfestival_suggestion 
			set suggestioncheck = 0
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 축제 추천 중복방지 select문 -->
	<select id="busanSuggestionCheck2" resultType="int" >
		<![CDATA[
			select count(*) 
			from busanfestival_suggestion 
			where UC_SEQ = #{UC_SEQ} and id = #{id} 
		]]>
	</select>
	
	<!-- 부산 체험 댓글 총 개수 -->
	<select id="busanCommentgetTotalRowCount3" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM P_BUSANexperience_COMMENT
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</select>

	<!-- 부산 체험 댓글 조회 -->
   	<select id="busanCommentselect3" resultType="kr.co.intrip.tourist.dto.BusanCommentDTO" parameterType="kr.co.intrip.tourist.dto.CommentPagingDTO">
   		<![CDATA[
	   		select *
   			 from (
        	select pt.*, row_number() over(order by com_date desc) as rNum
        	from P_BUSANexperience_COMMENT pt 
        	where UC_SEQ = #{UC_SEQ}
        	) mb
   		 	where rNum between #{firstRow} and #{lastRow}
   		]]>
   	</select>
   	
   	<!-- 부산 체험 댓글 작성 -->
	<insert id="busanWriteReply3">
			<![CDATA[
			   	insert into P_BUSANexperience_COMMENT(COM_NUM, ID, UC_SEQ, COM_CONTENT)
			  	values( #{com_num}, #{id}, #{UC_SEQ}, #{com_content})
		  	]]>
	</insert>
	
	<!-- 부산 체험 댓글 수 증가  -->
	<update id="busancommentcount3">
		<![CDATA[
			UPDATE P_busanexperience
			SET commentcount = commentcount + 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	 
	<!-- 부산 체험 댓글 수 감소 -->
	<update id="busancommentcountminus3">
		<![CDATA[
			UPDATE P_busanexperience
			SET commentcount = commentcount - 1 
			WHERE UC_SEQ = #{UC_SEQ}
		]]>
	</update>
	
	<!-- 부산 체험 댓글 수정 -->
	<update id="busanupdateReply3" parameterType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
		   	update P_BUSANexperience_COMMENT 
		   	set COM_CONTENT = #{com_content}
		   	where com_num = #{com_num}
	   	]]>
	</update>
	   	
	<!-- 부산 체험 댓글 삭제 -->
	<delete id="busandeleteReply3" parameterType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
		   	delete
		   	from P_BUSANexperience_COMMENT 
		   	where com_num = #{com_num}
		]]>
	</delete>
	
	<!-- 부산 체험 선택된 댓글 조회 -->
	<select id="busanselectReply3" resultType="kr.co.intrip.tourist.dto.BusanCommentDTO">
		<![CDATA[
			select *
			from P_BUSANexperience_COMMENT
			where com_num = #{com_num}
		]]>
	</select>
	
	<!-- 부산 체험 찜 수 -->
	<update id="busanupdateSteamed3" parameterType="int">
		<![CDATA[
			update P_busanexperience 
			set steamedhit = steamedhit + 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 체험 찜 수 취소 -->
	<update id="busanupdateSteamedCancel3" parameterType="int">
		<![CDATA[
			update P_busanexperience 
			set steamedhit = steamedhit - 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 체험 찜 시 steamed 테이블에 insert -->
	<insert id="busaninsertSteamed3" parameterType="java.util.Map">
		<![CDATA[
			insert into busanexperience_steamed(steamedno , UC_SEQ , id) 
			values((SELECT ifnull(MAX(steamedno), 0) + 1 FROM busanexperience_steamed b) ,#{UC_SEQ} ,#{id})
		]]>
	</insert>

	<!-- 부산 체험 찜 취소 시 delete -->
	<delete id="busandeleteSteamed3">
		<![CDATA[
			delete 
			from busanexperience_steamed 
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</delete>

	<!-- 부산 체험 찜 시 Check를 1로 만들어서 중복방지-->
	<update id="busanupdateSteamedCheck3">
		<![CDATA[
			update busanexperience_steamed 
			set STEAMEDCHECK = 1
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 체험 찜 취소 시 다시 0  -->
	<update id="busanupdateSteamedCheckCancel3">
		<![CDATA[
			update busanexperience_steamed 
			set STEAMEDCHECK = 0
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 체험 찜 중복방지 select문 -->
	<select id="busanSteamedCheck3" resultType="int" >
		<![CDATA[
			select count(*) 
			from busanexperience_steamed 
			where UC_SEQ = #{UC_SEQ} and id = #{id} 
		]]>
	</select>

	<!-- 부산 체험 추천 수 -->
	<update id="busanupdateSuggestion3" parameterType="int">
		<![CDATA[
			update P_busanexperience 
			set suggestionhit = suggestionhit + 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 체험 추천 수 취소 -->
	<update id="busanupdateSuggestionCancel3" parameterType="int">
		<![CDATA[
			update P_busanexperience 
			set suggestionhit = suggestionhit - 1
			where UC_SEQ = #{UC_SEQ}
		]]>
	</update>

	<!-- 부산 체험 추천 시 steamed 테이블에 insert -->
	<insert id="busaninsertSuggestion3" parameterType="java.util.Map">
		<![CDATA[
			insert into busanexperience_suggestion(suggestionno , UC_SEQ , id) 
			values((SELECT ifnull(MAX(suggestionno), 0) + 1 FROM busanexperience_suggestion b) ,#{UC_SEQ} ,#{id})
		]]>
	</insert>

	<!-- 부산 체험 추천 취소 시 delete -->
	<delete id="busandeleteSuggestion3">
		<![CDATA[
			delete 
			from busanexperience_suggestion 
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</delete>

	<!-- 부산 체험 추천 시 Check를 1로 만들어서 중복방지-->
	<update id="busanupdateSuggestionCheck3">
		<![CDATA[
			update busanexperience_suggestion 
			set suggestioncheck = 1
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 체험 추천 취소 시 다시 0  -->
	<update id="busanupdateSuggestionCheckCancel3">
		<![CDATA[
			update busanexperience_suggestion 
			set suggestioncheck = 0
			where UC_SEQ = #{UC_SEQ} and id = #{id}
		]]>
	</update>

	<!-- 부산 체험 추천 중복방지 select문 -->
	<select id="busanSuggestionCheck3" resultType="int" >
		<![CDATA[
			select count(*) 
			from busanexperience_suggestion 
			where UC_SEQ = #{UC_SEQ} and id = #{id} 
		]]>
	</select>
	
	<!-- 부산 메인페이지 배너-->
	<select id="busantouristmain" resultType="kr.co.intrip.tourist.dto.BusanApiDTO">
		<![CDATA[
			select *
   			from (
        	select pt.*, row_number() over(order by SUGGESTIONHIT desc) as rNum
        	from P_busantourist pt 
        	) mb
   		 	where rNum between 1 and 4
		]]>
	</select>
	
	<!-- 부산 축제 4개 가져오기-->
	<select id="busanfestivalmain" resultType="kr.co.intrip.tourist.dto.BusanApiDTO">
		<![CDATA[
			select *
   			from (
        	select pt.*, row_number() over(order by SUGGESTIONHIT desc) as rNum
        	from P_busanfestival pt 
        	) mb
   		 	where rNum between 1 and 4
		]]>
	</select>
	
	<!-- 부산 체험 4개 가져오기-->
	<select id="busanexperiencemain" resultType="kr.co.intrip.tourist.dto.BusanApiDTO">
		<![CDATA[
			select *
   			from (
        	select pt.*, row_number() over(order by SUGGESTIONHIT desc) as rNum
        	from P_busanexperience pt 
        	) mb
   		 	where rNum between 1 and 4
		]]>
	</select>
	
	<!-- 제주도 여행지 페이지 검색  -->
	<select id="jejutourist11" resultType="kr.co.intrip.tourist.dto.ApiDTO" parameterType="kr.co.intrip.board.dto.Criteria">
   		select *
		from (
		select pt.*,row_number() over(order by CONTENTSID desc) as rNum
		from P_TOURIST pt 
		<include refid="search"></include>
		) mb
		where rNum between #{rowStart} and #{rowEnd}
	</select>

	<!-- 제주도 총 개수 -->
	<select id="getTotalRowCount11" resultType="int">
			SELECT count(*)
			FROM P_TOURIST
			<include refid="search"></include>
	</select>
	
	<!-- 부산 여행지 페이지 리스트 검색 -->
	<select id="busantourist11" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.board.dto.Criteria">
			select *
   			 from (
        	select pt.*, row_number() over(order by UC_SEQ desc) as rNum
        	from P_busantourist pt 
        	<include refid="search1"></include>
        	) mb
   		 	where rNum between #{rowStart} and #{rowEnd}		
	</select>
	
	<!-- 부산 여행지 페이지 리스트 검색2 -->
	<select id="busantourist12" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.board.dto.Criteria">
			select *
   			 from (
        	select pt.*, row_number() over(order by UC_SEQ desc) as rNum
        	from P_BUSANEXPERIENCE pt 
        	<include refid="search1"></include>
        	) mb
   		 	where rNum between #{rowStart} and #{rowEnd}		
	</select>
	
	<!-- 부산 여행지 페이지 리스트 검색3 -->
	<select id="busantourist13" resultType="kr.co.intrip.tourist.dto.BusanApiDTO" parameterType="kr.co.intrip.board.dto.Criteria">
			select *
   			 from (
        	select pt.*, row_number() over(order by UC_SEQ desc) as rNum
        	from P_BUSANFESTIVAL pt 
        	<include refid="search1"></include>
        	) mb
   		 	where rNum between #{rowStart} and #{rowEnd}		
	</select>
	
	<!-- 부산 총 개수 -->
	<select id="busangetTotalRowCount12" parameterType="kr.co.intrip.board.dto.Criteria" resultType="int">
			SELECT sum(total)
			FROM (
			   SELECT count(*) as total
			   FROM P_BUSANEXPERIENCE
				<include refid="search1"></include>
			   UNION
			   SELECT count(*) as total
			   FROM P_BUSANFESTIVAL
			   <include refid="search1"></include>
			   UNION
			   SELECT count(*) as total
			   FROM P_BUSANTOURIST
			   <include refid="search1"></include>)mb
	</select>
	
	<sql id="search">
 <if test="searchType != null">
  <if test="searchType == 'j'.toString()">where title like CONCAT('%',#{keyword},'%')</if>
 </if>
</sql>

<sql id="search1">
 <if test="searchType != null">
  <if test="searchType == 'b'.toString()">where place like CONCAT('%',#{keyword},'%')</if>
 </if>
</sql>
 </mapper>